#!/usr/bin/ruby -w

require 'nametag'
require 'optparse'

info    = 'nametag - set audio file tags based on file name'
usage   = 'nametag [<option(s)>]'
rc      = "#{ Dir.home }/.nametagrc"
options = { cfgfile: nil, verbose: 0, noact: false }

op = OptionParser.new(usage) do |o|                             # {{{1
  o.on('-c', '--config-file FILE', 'Configuration file') do |x|
    options[:cfgfile] = x
  end

  o.on('-v', '--verbose', 'Run verbosely') do |x|
    options[:verbose] += 1
  end

  o.on('-n', '--no-act', 'Do not modify files') do |x|
    options[:noact] = !x
  end

  o.on_tail('-h', '--help', 'Show this message') do
    puts info, '', o; exit
  end

  o.on_tail('--version', 'Show version') do
    puts "nametag version #{NameTag::VERSION}"; exit
  end
end                                                             # }}}1

begin
  op.parse! ARGV
rescue OptionParser::ParseError => e
  $stderr.puts "Error: #{e}"; exit 1
end

opts  = NameTag::DEFAULTS
v     = options[:verbose]
cf    = options[:cfgfile] || (File.exists?(rc) ? rc : nil)

load cf if cf

ARGV.each do |f|                                                # {{{1
  fn    = File.realpath f
  info  = NameTag.parse(fn, opts) or raise "parse failed for: #{f}"
  info_ = NameTag.process info, opts

  if v > 0
    puts "#{fn}:"
    puts(v > 1 ? "  - #{info}\n  + #{info_}" : "  #{info_}")
    puts
  end

  NameTag.tag fn, info_ unless options[:noact]
end                                                             # }}}1

# vim: set tw=70 sw=2 sts=2 et fdm=marker :
